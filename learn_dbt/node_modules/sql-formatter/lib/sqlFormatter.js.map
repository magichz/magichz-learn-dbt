{"version":3,"file":"sqlFormatter.js","names":["BigQueryFormatter","Db2Formatter","HiveFormatter","MariaDbFormatter","MySqlFormatter","N1qlFormatter","PlSqlFormatter","PostgreSqlFormatter","RedshiftFormatter","SparkFormatter","SqliteFormatter","SqlFormatter","TrinoFormatter","TransactSqlFormatter","SingleStoreDbFormatter","SnowflakeFormatter","formatters","bigquery","db2","hive","mariadb","mysql","n1ql","plsql","postgresql","redshift","singlestoredb","snowflake","spark","sql","sqlite","transactsql","trino","tsql","supportedDialects","Object","keys","defaultOptions","language","tabWidth","useTabs","keywordCase","indentStyle","logicalOperatorNewline","tabulateAlias","commaPosition","expressionWidth","linesBetweenQueries","denseOperators","newlineBeforeSemicolon","format","query","cfg","Error","options","validateConfig","FormatterCls","ConfigError","includes","params","validateParams","console","warn","paramValues","Array","values","every","p"],"sources":["../src/sqlFormatter.ts"],"sourcesContent":["import BigQueryFormatter from './languages/bigquery/bigquery.formatter.js';\nimport Db2Formatter from './languages/db2/db2.formatter.js';\nimport HiveFormatter from './languages/hive/hive.formatter.js';\nimport MariaDbFormatter from './languages/mariadb/mariadb.formatter.js';\nimport MySqlFormatter from './languages/mysql/mysql.formatter.js';\nimport N1qlFormatter from './languages/n1ql/n1ql.formatter.js';\nimport PlSqlFormatter from './languages/plsql/plsql.formatter.js';\nimport PostgreSqlFormatter from './languages/postgresql/postgresql.formatter.js';\nimport RedshiftFormatter from './languages/redshift/redshift.formatter.js';\nimport SparkFormatter from './languages/spark/spark.formatter.js';\nimport SqliteFormatter from './languages/sqlite/sqlite.formatter.js';\nimport SqlFormatter from './languages/sql/sql.formatter.js';\nimport TrinoFormatter from './languages/trino/trino.formatter.js';\nimport TransactSqlFormatter from './languages/transactsql/transactsql.formatter.js';\nimport SingleStoreDbFormatter from './languages/singlestoredb/singlestoredb.formatter.js';\nimport SnowflakeFormatter from './languages/snowflake/snowflake.formatter.js';\n\nimport { FormatOptions } from './FormatOptions.js';\nimport { ParamItems } from './formatter/Params.js';\n\nexport const formatters = {\n  bigquery: BigQueryFormatter,\n  db2: Db2Formatter,\n  hive: HiveFormatter,\n  mariadb: MariaDbFormatter,\n  mysql: MySqlFormatter,\n  n1ql: N1qlFormatter,\n  plsql: PlSqlFormatter,\n  postgresql: PostgreSqlFormatter,\n  redshift: RedshiftFormatter,\n  singlestoredb: SingleStoreDbFormatter,\n  snowflake: SnowflakeFormatter,\n  spark: SparkFormatter,\n  sql: SqlFormatter,\n  sqlite: SqliteFormatter,\n  transactsql: TransactSqlFormatter,\n  trino: TrinoFormatter,\n  tsql: TransactSqlFormatter, // alias for transactsql\n};\nexport type SqlLanguage = keyof typeof formatters;\nexport const supportedDialects = Object.keys(formatters);\n\nconst defaultOptions: FormatOptions = {\n  language: 'sql',\n  tabWidth: 2,\n  useTabs: false,\n  keywordCase: 'preserve',\n  indentStyle: 'standard',\n  logicalOperatorNewline: 'before',\n  tabulateAlias: false,\n  commaPosition: 'after',\n  expressionWidth: 50,\n  linesBetweenQueries: 1,\n  denseOperators: false,\n  newlineBeforeSemicolon: false,\n};\n\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptions} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\nexport const format = (query: string, cfg: Partial<FormatOptions> = {}): string => {\n  if (typeof query !== 'string') {\n    throw new Error('Invalid query argument. Expected string, instead got ' + typeof query);\n  }\n\n  const options = validateConfig({\n    ...defaultOptions,\n    ...cfg,\n  });\n\n  const FormatterCls =\n    typeof options.language === 'string' ? formatters[options.language] : options.language;\n\n  return new FormatterCls(options).format(query);\n};\n\nexport class ConfigError extends Error {}\n\nfunction validateConfig(cfg: FormatOptions): FormatOptions {\n  if (typeof cfg.language === 'string' && !supportedDialects.includes(cfg.language)) {\n    throw new ConfigError(`Unsupported SQL dialect: ${cfg.language}`);\n  }\n\n  if ('multilineLists' in cfg) {\n    throw new ConfigError('multilineLists config is no more supported.');\n  }\n  if ('newlineBeforeOpenParen' in cfg) {\n    throw new ConfigError('newlineBeforeOpenParen config is no more supported.');\n  }\n  if ('newlineBeforeCloseParen' in cfg) {\n    throw new ConfigError('newlineBeforeCloseParen config is no more supported.');\n  }\n  if ('aliasAs' in cfg) {\n    throw new ConfigError('aliasAs config is no more supported.');\n  }\n\n  if (cfg.expressionWidth <= 0) {\n    throw new ConfigError(\n      `expressionWidth config must be positive number. Received ${cfg.expressionWidth} instead.`\n    );\n  }\n\n  if (cfg.commaPosition === 'before' && cfg.useTabs) {\n    throw new ConfigError(\n      'commaPosition: before does not work when tabs are used for indentation.'\n    );\n  }\n\n  if (cfg.params && !validateParams(cfg.params)) {\n    // eslint-disable-next-line no-console\n    console.warn('WARNING: All \"params\" option values should be strings.');\n  }\n\n  return cfg;\n}\n\nfunction validateParams(params: ParamItems | string[]): boolean {\n  const paramValues = params instanceof Array ? params : Object.values(params);\n  return paramValues.every(p => typeof p === 'string');\n}\n\nexport type FormatFn = typeof format;\n"],"mappings":"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"}